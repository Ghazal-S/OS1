For Sortig 1000 Random Numbers 


	Q3_Results : 
		m = 30 => run_time :0.000393
		m = 20 => run_time :0.000316 
		m = 15 => run_time :0.000365 
		m = 10 => run_time :0.000299
		m = 5 => run_time :0.000321
		m = 4 => run_time :0.000371
		m = 2 => run_time :0.000469



اگر مقدار m خيلي كوچك شود دوباره زمان اجرا زياد ميشود و بين ٥تا ١٠ كمترين زمان اجرا را داريم به دليل اينكه در m خيلي كوچك بايد عملا براي همه مرتب سازي ها از mergeSort استفاده كند و folk كند كه زمان زيادي ميبرد و از آن طرف اگر m عدد خيلي بزرگي هم باشد چون الگوريتم insertionSort براي تعداد بالا زمان بيشتري را ميبرد run timeزياد ميشود.


